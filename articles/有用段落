作为一名前端开发人员，我安装了以下插件：

BracketHighlighter：用于高亮成对符号（引号、括号、标签）的工具。

Color Picker（不是Color Pick）：取色器。

DocBlockr：生成特定格式的函数注释。只要在函数上面一行输入“/**”，按Tab就OK了。

GBK Encoding Support：对GBK编码文件的支持，中文开发者必备。

SidebarEnhancements：增强侧栏文件列表的右键菜单。

Tag：编写HTML的时候可以自动闭合标签。

Tortoise：在侧栏文件列表的右键菜单中，增加Tortoise软件（TortoiseSVN、TortoiseGit、TortoiseHg）的命令。安装此插件后，可能需要修改Tortoise软件的路径。如果路径不正确，则右键菜单中不会出现Tortoise命令。

Zencoding：这个应该不用多说了，快速编写HTML的工具。

**tail -f /var/log/kern.log 达到的功能就是 dmesg | tail -f**


## protobuf
尝试使用google的protobuf, 在github上拉下来的代码，java版本使用mvn打包一直报错。按照readme说明，应该就是protoc版本不对应了。
真是奇怪了。另外，在网站上也找不到二进制版本的下载链接，所以反倒是要用google搜索，最后到达页面：

https://github.com/google/protobuf/releases

下载对应语言版本的压缩包，解压就好了。当然，protoc 也要对应版本，不然还是要报错。

最好，用mvn install -P lite生成了一个jar包放在target目录下，在使用到protobuf 生成代码的时候，是需要依赖这个包的。这个包还真不小。。。

如果需要使用代理，请找到mvn的安装目录，打开settings.xml 找到相应项修改即可。

可以使用命令 
	
	protoc --java_out=src/main/java -I../src ../src/google/protobuf/descriptor.proto

自己生成对应的proto java文件
### npm udpate nodejs
```
    sudo npm cache clean -f
    sudo npm install -g n
    sudo n stable

    sudo ln -sf /usr/local/n/versions/node/<VERSION>/bin/node /usr/bin/node 
```

自己下载二进制包的方法
sudo tar -C /usr/local --strip-components 1 -xzf node-v0.10.34-linux-x86.tar.gz


jacketli(李军) 11-05 15:23:21
分享中提到的我们收集的一些资源：

blender 使用教程（视频）：
https://www.youtube.com/playlist?list=PLNJX5Erk6YjBZJOFmruc-qHS6HWDxXwgG

three.js 源码注释: http://blog.csdn.net/omni360/article/category/2511147/4

基本的光照计算公式 http://www.cnblogs.com/mikewolf2002/archive/2012/02/02/2336006.html

blend材质:http://www.blender-materials.com/type/metal

three.js deom: http://stemkoski.github.io/Three.js/ 


flex-model:[flexbox](https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties)
[great playground](http://codepen.io/justd/pen/yydezN)

flex-basis: the original size of items
	0: exactly <times> of flex-grow
	auto: as much as <times> of flex-grow, content relative

看了草案之后，发现更清晰了，其实是这样子的： free-space = (container.width - flex-basis), 
然后free-space再根据flex-grow按比例进行空间分配, 当flex-basis: 0; 时自然地看到严格按照flex-grow划分了，
而flex-basis: auto; 则使用的是item width, 剩下的再进行划分，所以会看到不成比例的item
